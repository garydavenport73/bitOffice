let textarea=document.getElementById("text-editor");let documentDiv=document.getElementById('document-result');let remSize=1;let marginSize=2;let writeUndos=[];let writeUndosCursor=0;let compareWriteData="";initializeWriteApp();let lastTextAreaText=textarea.value;function initializeWriteApp(){documentDiv.style.fontSize=remSize+"rem";documentDiv.style.marginLeft=marginSize+"rem";documentDiv.style.marginRight=marginSize+"rem";writeUndos.push(textarea.value);writeUpdateResult();textarea.spellcheck=false;textarea.focus();document.getElementById('text-editor').addEventListener('keydown',function(e){if(e.key=='Tab'){e.preventDefault();insertTab(this);updateUndosIfTextChanges();}});document.getElementById('text-editor').addEventListener('input',updateUndosIfTextChanges);compareWriteData=makeCompareWriteData();}
function updateUndosIfTextChanges(){console.log("called");console.log(writeUndos);if(lastTextAreaText!=textarea.value){addUndo();lastTextAreaText=textarea.value;}
console.log(writeUndos);}
function insertTab(aTextarea){let start=aTextarea.selectionStart;let end=aTextarea.selectionEnd;aTextarea.value=aTextarea.value.substring(0,start)+
"\t"+aTextarea.value.substring(end);aTextarea.selectionStart=aTextarea.selectionEnd=start+1;writeUpdateResult();}
function exportToHTML(){let contents=serializeElementToPage("document-parent","html,#document-result,#document-parent{background-color:white;}");copyToClipBoard(contents);if(confirm("HTML document exported to clipboard.\n\nWould you like to export to HTML file?")){saveStringToTextFile(contents,'write'+getTodaysDate(),'.html');}}
function newDocument(){if(confirm("This will overwrite current document.")){writeResetAll();}}
function writeResetAll(){writeBaseFilename="";remSize=1;marginSize=2;textarea.value="";documentDiv.style.textAlign="left";documentDiv.style.fontFamily="Georgia, 'Times New Roman', Garamond, Times, serif";documentDiv.style.fontSize="1rem";documentDiv.style.marginLeft="2rem";textarea.spellcheck=false;writeUndos=[];writeUndos.push(textarea.value);writeUpdateResult();textarea.focus();}
function makeCompareWriteData(){writeUpdateResult();let data={}
data["text"]=textarea.value;data["textAlign"]=documentDiv.style.textAlign;data["fontFamily"]=documentDiv.style.fontFamily;data["fontSize"]=documentDiv.style.fontSize;data["marginSize"]=documentDiv.style.marginLeft;data["spellCheck"]=textarea.spellcheck;return JSON.stringify(data);;}
function writeDataToJSON(){writeUpdateResult();let data={}
data["text"]=textarea.value;data["textAlign"]=documentDiv.style.textAlign;data["fontFamily"]=documentDiv.style.fontFamily;data["fontSize"]=documentDiv.style.fontSize;data["marginSize"]=documentDiv.style.marginLeft;data["spellCheck"]=textarea.spellcheck;writeBaseFilename="write"+getTodaysDate();let saveContents=JSON.stringify(data);saveStringToTextFile(saveContents,writeBaseFilename,".json");compareWriteData=makeCompareWriteData();}
function writeLoad(){console.log("writeLoad() called");console.log(textarea.value);console.log(textarea.value.length);let proceed=true;if(textarea.value.length!=0){proceed=confirm("This will overwrite current document");}
if(proceed){let fileContents="";let inputTypeIsFile=document.createElement('input');inputTypeIsFile.type="file";inputTypeIsFile.accept=".json";inputTypeIsFile.addEventListener("change",function(){let inputFile=inputTypeIsFile.files[0];let fileReader=new FileReader();fileReader.onload=function(fileLoadedEvent){fileContents=fileLoadedEvent.target.result;let loadedData=JSON.parse(fileContents);textarea.value=loadedData["text"];documentDiv.style.textAlign=loadedData["textAlign"];documentDiv.style.fontFamily=loadedData["fontFamily"];documentDiv.style.fontSize=loadedData["fontSize"];documentDiv.style.marginLeft=loadedData["marginSize"];textarea.spellcheck=loadedData["spellCheck"];writeUpdateResult();remSize=parseFloat(loadedData["fontSize"].split("rem")[0]);marginSize=parseFloat(loadedData["marginSize"].split("rem")[0]);writeUndos=[];console.log("writeUndos length",writeUndos.length);writeUndos.push(textarea.value);textarea.focus();};fileReader.readAsText(inputFile,"UTF-8");});inputTypeIsFile.click();}}
function addUndo(){console.log(writeUndos.length,writeUndosCursor);console.log(writeUndos);if(writeUndos.length-1===writeUndosCursor){console.log("we are at end");if(writeUndos.length>=316){writeUndos.shift();writeUndos.push(textarea.value);}else{writeUndos.push(textarea.value);writeUndosCursor+=1;}
console.log(writeUndos);}else{console.log("we are not at end");console.log(writeUndos);let removeNumberOfElements=writeUndos.length-(writeUndosCursor+1);writeUndos=writeUndos.slice(0,-removeNumberOfElements);console.log(writeUndos);writeUndos.push(textarea.value);writeUndosCursor+=1;console.log(writeUndos);}}
function backUndo(){console.log("back Undo called");console.log(writeUndos);console.log(writeUndosCursor);if(writeUndosCursor>0){let thisText=writeUndos[writeUndosCursor-1];textarea.value=thisText;writeUpdateResult();writeUndosCursor=writeUndosCursor-1;}
console.log(writeUndos);console.log(writeUndosCursor);}
function writeRedo(){console.log("redo called");if(writeUndos.length-1===writeUndosCursor){console.log("we are at end");}else{console.log("we are not at end");writeUndosCursor+=1;let thisText=writeUndos[writeUndosCursor];textarea.value=thisText;writeUpdateResult();}}
function processSelectedText(clickedElement){let action=clickedElement.innerHTML;console.log(action);if(action==="⇚"){documentDiv.style.textAlign="left";}else if(action==="⇛⇚"){documentDiv.style.textAlign="center";}else if(action==="⇛"){documentDiv.style.textAlign="right";}else if(action==="Mono"){documentDiv.style.fontFamily="'Courier New', Courier, monospace";}else if(action==="Serif"){documentDiv.style.fontFamily="Georgia, 'Times New Roman', Garamond, Times, serif";}else if(action==="Sans"){documentDiv.style.fontFamily="Arial, Verdana, Helvetica, Tahoma, sans-serif";}else if(action==="<sub>A</sub>A"){remSize=remSize+.2;documentDiv.style.fontSize=remSize.toString()+"rem";}else if(action==="<sup>A</sup>A"){remSize=remSize-.2;documentDiv.style.fontSize=remSize.toString()+"rem";}else if(action==="⇥⇤"){marginSize=marginSize+1;if(marginSize>20){marginSize=20;}
documentDiv.style.marginLeft=marginSize.toString()+"rem";documentDiv.style.marginRight=marginSize.toString()+"rem";}else if(action==="⇤⇥"){marginSize=marginSize-1;if(marginSize<0){marginSize=0;}
documentDiv.style.marginLeft=marginSize.toString()+"rem";documentDiv.style.marginRight=marginSize.toString()+"rem";}else if(action==="⟲"){backUndo();}else if(action==="✓"){console.log(textarea.spellcheck);textarea.spellcheck=!(textarea.spellcheck);console.log(textarea.spellcheck);textarea.focus();}
let len=textarea.value.length;let start=textarea.selectionStart;let end=textarea.selectionEnd;let sel=textarea.value.substring(start,end);let replace=sel;if(action==="<b>B</b>"){replace='<b>'+sel+'</b>';}else if(action==="<u>U</u>"){replace='<u>'+sel+'</u>';}else if(action==="<em>I</em>"){replace='<em>'+sel+'</em>';}else if(action==="H1"){replace='<h1>'+sel+'</h1>';}else if(action==="H2"){replace='<h2>'+sel+'</h2>';}else if(action==="H3"){replace='<h3>'+sel+'</h3>';}else if(action==="¶"){replace='<p>'+sel+'</p>';}else if(action==="―"){replace='<hr>'+sel;}else if(action==="•"){replace='&bullet; '+sel;}else if(action==="↹"){replace="\t"+sel;}
textarea.value=textarea.value.substring(0,start)+replace+textarea.value.substring(end,len);writeUpdateResult();textarea.selectionStart=start+replace.length;textarea.selectionEnd=start+replace.length;textarea.focus();if(action!="⟲"){updateUndosIfTextChanges();}}
function writeUpdateResult(){let currentContents=document.getElementById('text-editor').value;document.getElementById('document-result').innerHTML=currentContents.split('\n').join('<br>');if(textarea.spellcheck===true){document.getElementById("spell-check").style.color="green";}else{document.getElementById("spell-check").style.color="red";}}
function printDiv(id){let mySerializer=new XMLSerializer(id);let s=new XMLSerializer();let d=document;let str=s.serializeToString(d.getElementById(id));var a=window.open('','');a.document.write('<html>');a.document.write("<style> #document-result {overflow-wrap: break-word;width: auto;white-space: pre-wrap;} </style>");a.document.write(str);a.document.write('</body></html>');a.document.close();a.print();}